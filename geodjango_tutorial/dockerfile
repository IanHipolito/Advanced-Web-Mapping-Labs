# Use Miniconda as the base image
FROM continuumio/miniconda3
LABEL maintainer="IanHipolito"

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV DJANGO_SETTINGS_MODULE=geodjango_tutorial.settings

# Set the working directory
RUN mkdir /app
WORKDIR /app

# Copy the environment YAML file and create the environment
COPY ENV.yml .
RUN conda env create -f ENV.yml

# Install GDAL and PostgreSQL client
RUN apt-get update && \
    apt-get install -y postgresql-client gdal-bin libgdal-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Set GDAL environment variables for Django to recognize GDAL installation
ENV GDAL_LIBRARY_PATH=/opt/conda/envs/awm_env/lib/libgdal.so

# Ensure the environment is activated
SHELL ["conda", "run", "-n", "awm_env", "/bin/bash", "-c"]
RUN echo "conda activate awm_env" >> ~/.bashrc
SHELL ["/bin/bash", "--login", "-c"]

# Copy the application code
COPY . /app
# Copy the wait-for-postgis.sh script 
COPY wait-for-postgis.sh .

ENV PYTHONPATH="/app"
COPY manage.py .

# Expose the port that the container will operate on
EXPOSE 8001

# Set the entry point to use conda
ENTRYPOINT ["conda", "run", "--no-capture-output", "-n", "awm_env"]

# Finally, start the server
CMD ["python", "manage.py", "runserver", "0.0.0.0:8001"]
